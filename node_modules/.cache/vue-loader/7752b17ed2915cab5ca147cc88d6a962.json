{"remainingRequest":"/Users/charon/Desktop/jing/code/vue3_book_codes-main/codes/chapter9/screen-app/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/charon/Desktop/jing/code/vue3_book_codes-main/codes/chapter9/screen-app/src/views/operation-screen/index.vue?vue&type=template&id=94b1c7a2&scoped=true","dependencies":[{"path":"/Users/charon/Desktop/jing/code/vue3_book_codes-main/codes/chapter9/screen-app/src/views/operation-screen/index.vue","mtime":1678097251149},{"path":"/Users/charon/Desktop/jing/code/vue3_book_codes-main/codes/chapter9/screen-app/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1678071098307},{"path":"/Users/charon/Desktop/jing/code/vue3_book_codes-main/codes/chapter9/screen-app/node_modules/cache-loader/dist/cjs.js","mtime":1678071094995},{"path":"/Users/charon/Desktop/jing/code/vue3_book_codes-main/codes/chapter9/screen-app/node_modules/vue-loader-v16/dist/index.js","mtime":1678071098307}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0ib3BlcmF0aW9uLXNjcmVlbiI+CiAgICA8ZGl2IGNsYXNzPSJuYXYtYm94Ij4KICAgICAgPHRpbWUtdGFicwogICAgICAgIDpkYXRhQXJyPSJkYXRhQXJyIgogICAgICAgIEBjaGFuZ2U9Im9uQ2hhbmdlIgogICAgICAgIHYtbW9kZWw6dmFsdWU9ImN1clR5cGUiCiAgICAgICAgc2l6ZT0ibWlkIgogICAgICA+PC90aW1lLXRhYnM+CiAgICA8L2Rpdj4KICAgIDxzY3JlZW4taGVhZGVyIDp0aXRsZVRleHQ9InRpdGxlVGV4dCI+PC9zY3JlZW4taGVhZGVyPgogICAgPGRpdiBjbGFzcz0iZ3JpZC1sYXlvdXQiPgogICAgICA8ZGl2CiAgICAgICAgY2xhc3M9ImdyaWQtaXRlbSIKICAgICAgICB2LWZvcj0iKGl0ZW0sIGluZGV4KSBpbiBsYXlvdXQiCiAgICAgICAgOmNsYXNzPSJpdGVtLm5hbWUiCiAgICAgICAgOmtleT0iaW5kZXgiCiAgICAgID4KICAgICAgICA8Y29tcG9uZW50CiAgICAgICAgICA6aXM9Iml0ZW0ubmFtZSIKICAgICAgICAgIDp0aXRsZT0iaXRlbS50aXRsZSIKICAgICAgICAgIDpyZWY9InNldEl0ZW1SZWYiCiAgICAgICAgPjwvY29tcG9uZW50PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2Pgo="},{"version":3,"sources":["/Users/charon/Desktop/jing/code/vue3_book_codes-main/codes/chapter9/screen-app/src/views/operation-screen/index.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtB,CAAC,CAAC,CAAC;QACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACb;QACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACd,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/charon/Desktop/jing/code/vue3_book_codes-main/codes/chapter9/screen-app/src/views/operation-screen/index.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"operation-screen\">\n    <div class=\"nav-box\">\n      <time-tabs\n        :dataArr=\"dataArr\"\n        @change=\"onChange\"\n        v-model:value=\"curType\"\n        size=\"mid\"\n      ></time-tabs>\n    </div>\n    <screen-header :titleText=\"titleText\"></screen-header>\n    <div class=\"grid-layout\">\n      <div\n        class=\"grid-item\"\n        v-for=\"(item, index) in layout\"\n        :class=\"item.name\"\n        :key=\"index\"\n      >\n        <component\n          :is=\"item.name\"\n          :title=\"item.title\"\n          :ref=\"setItemRef\"\n        ></component>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport LineNet from \"./LineNet.vue\";\nimport Bus from \"./Bus.vue\";\nimport GetoutReasons from \"./GetoutReasons.vue\";\nimport AreaPassengerStat from \"./AreaPassengerStat.vue\";\nimport CardTypeUse from \"./CardTypeUse.vue\";\nimport TransportPassengerRank from \"./TransportPassengerRank.vue\";\nimport EPayTrend from \"./EPayTrend.vue\";\nimport ScreenHeader from \"@/components/ScreenHeader.vue\";\nimport {\n  defineComponent,\n  reactive,\n  toRefs,\n  markRaw,\n  ref,\n  computed,\n  nextTick,\n  onBeforeUpdate,\n  // onBeforeMount,\n} from \"vue\";\nimport TimeTabs from \"@/components/TimeTabs.vue\";\nimport { useStore } from \"vuex\";\n\n// import { initWebSocket } from \"@/utils/websocket\";\n\nexport default defineComponent({\n  name: \"operation-screen\",\n  components: {\n    LineNet,\n    GetoutReasons,\n    AreaPassengerStat,\n    CardTypeUse,\n    TransportPassengerRank,\n    EPayTrend,\n    ScreenHeader,\n    Bus,\n    TimeTabs,\n  },\n  setup() {\n    let options = reactive({\n      titleText: \"公交大数据运营数据分析\",\n      layout: [\n        {\n          title: \"线网\",\n          name: \"line-net\",\n        },\n        {\n          title: \"车辆\",\n          name: \"bus\",\n        },\n        {\n          title: \"违规原因分析\",\n          name: \"getout-reasons\",\n        },\n        {\n          title: `卡类型使用情况`,\n          name: \"card-type-use\",\n        },\n        {\n          title: \"区域客流统计\",\n          name: \"area-passenger-stat\",\n        }, //地图\n        {\n          title: `线路运客数排名`,\n          name: \"transport-passenger-rank\",\n        },\n        {\n          title: `电子支付趋势`,\n          name: \"e-pay-trend\",\n        },\n      ],\n    });\n    const dataArr = markRaw([\n      { label: \"日\", value: 0 },\n      { label: \"周\", value: 1 },\n      { label: \"月\", value: 2 },\n      { label: \"年\", value: 3 },\n    ]);\n    const store = useStore(); //调用mutation方法\n    const screenDataType = computed(() => {\n      return store.getters[\"app-global/GET_DATATYPE\"];\n    });\n    let curType = ref(screenDataType.value);\n    //刷新数据\n    let itemRefs: any = [];\n\n    const setItemRef = (el:any) => {\n      if (el) {\n        itemRefs.push(el);\n      }\n    };\n    function onChange(val:any) {\n      curType.value = val;\n      store.commit(\"app-global/SET_DATATYPE\", val);\n      nextTick(() => {\n        itemRefs.forEach((n:any) => {\n          console.log(\"key\", n, n.initData);\n          n.initData && n.initData(); // eslint-disable-line\n        });\n      });\n    }\n    //数据变化后重置数组\n    onBeforeUpdate(() => {\n      itemRefs = [];\n    });\n    //#region ws实时刷新\n    // const openWs = false; //开启websocket\n    // let websocketInstance: any = null;\n    // if (websocketInstance == null) {\n    //   websocketInstance = createdSockets();\n    // }\n    // //关闭websocket\n    // function closeWS() {\n    //   if (websocketInstance) {\n    //     websocketInstance.send(\"close\"); //通过发送close命令，让JAVA后台来关闭ws\n    //     websocketInstance = null;\n    //   }\n    // }\n    // // 连接websocket\n    // function createdSockets() {\n    //   const curTenantId = \"yujie\";\n    //   return initWebSocket(\n    //     {\n    //       userId: `${curTenantId}_realtime`,\n    //     },\n    //     refreshtData,\n    //     `/web-socket-server/realtime`\n    //   );\n    // }\n    // // 实时回调\n    // function refreshtData(res) {\n    //   // console.log(\"数据 :>> \", res.data.data, $refs[res.name]);\n    //  nextTick(() => {\n    //     itemRefs.forEach((n) => {\n    //       console.log(\"key\", n, n.initData);\n    //       n.refreshData && n.refreshData(res.data.data); // eslint-disable-line\n    //     });\n    //   });\n    // }\n    // onBeforeMount(() => {\n    //   closeWS();\n    // });\n    //#endregion\n\n    return {\n      ...toRefs(options),\n      dataArr,\n      curType,\n      onChange,\n      setItemRef,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"./index.scss\";\n.operation-screen {\n  background-image: url(\"/imgs/bg/operate-bg.png\");\n  background-size: cover;\n  background-repeat: no-repeat;\n  height: 100%;\n  width: 100%;\n  position: absolute;\n}\n.ctrl-box {\n  position: absolute;\n  top: 2px;\n  left: 15px;\n  z-index: 4;\n}\n.nav-box {\n  position: absolute;\n  right: 20px;\n  top: 40px;\n  z-index: 9;\n}\n</style>\n"]}]}